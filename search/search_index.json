{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Get Started","text":"<p> Embed Analytics Everywhere </p>"},{"location":"#static-bi","title":"Static BI?","text":"<ul> <li>The easiest way to embed interactive dashboards in your website.</li> <li>Powered by duckDB-WASM, Echarts and Web Components.</li> </ul>"},{"location":"#your-first-dashboard","title":"Your first dashboard","text":"<p>No install is needed:</p> <ol> <li>Add BI components in a html file,</li> <li>Open the file in a browser,</li> <li>Play with your dashboard,</li> <li>Deploy Anywhere.</li> </ol>"},{"location":"#1-add-bi-components-in-a-html-file","title":"1. Add BI components in a html file","text":"<p>To follow the evolution of stocks value of some companies over time, create an html file with this content:</p> my_first_dashboard.html<pre><code>&lt;source-table\n  name=\"stocks\"\n  file=\"https://idl.uw.edu/mosaic/data/stocks.parquet\"\n  columns=\"*, Symbol as company, Close as stock_value, date_trunc('month', Date) as month\"&gt;\n&lt;/source-table&gt;\n\n&lt;bar-chart\n  table=\"stocks\"\n  measure=\"avg(stock_value)\"\n  by=\"company\"&gt;\n&lt;/bar-chart&gt;\n\n&lt;line-chart\n  table=\"stocks\"\n  measure=\"avg(stock_value)\"\n  by=\"month\"\n  order_by=\"month\"&gt;\n&lt;/line-chart&gt;\n\n\n&lt;script type=\"module\" src=\"https://unytics.io/static_bi/src/connectors/duckdb.js\"&gt;&lt;/script&gt;\n&lt;script type=\"module\" src=\"https://unytics.io/static_bi/src/components/source_tables.js\"&gt;&lt;/script&gt;\n&lt;script type=\"module\" src=\"https://unytics.io/static_bi/src/components/echarts.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"#2-open-the-file-in-a-browser","title":"2. Open the file in a browser","text":"<p>Open the file in Google Chrome (or any browser) and you'll get this simple dashboard:</p> <p></p>"},{"location":"#3-play-with-your-dashboard","title":"3. Play with your dashboard","text":"<p>The dashboard is interactive! Click on <code>AMZN</code> bar in the bar chart to filter the data in other charts:</p> <p></p>"},{"location":"#4-deploy-anywhere","title":"4. Deploy Anywhere","text":"<p>You can deploy your website anywhere you can deploy static pages such as:</p> <ul> <li>Your own website, web app</li> <li>github pages</li> <li>gitlab pages</li> <li>s3</li> <li>google cloud storage</li> <li>netlify</li> <li>vercel</li> <li>etc</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Serverless Analytics: Runs entirely in the browser after loading static assets (HTML, JS, CSS, data files).</li> <li>Interactive Filtering: Click on chart elements (bars, lines, pie slices) to filter the data across other components on the page. Supports multi-select with <code>Ctrl</code>/<code>Cmd</code> key.</li> <li>Declarative UI: Define data sources and charts using simple custom HTML tags (e.g., <code>&lt;bar-chart&gt;</code>, <code>&lt;score-card&gt;</code>, <code>&lt;source-table&gt;</code>) based on Web Components Javascript Standard.</li> <li>In-Browser Data Engine: Uses DuckDB-WASM to query and aggregate data (e.g., from Parquet files) directly within the user's browser using familiar SQL.</li> <li>Rich Component Library: Includes:<ul> <li><code>&lt;score-card&gt;</code>: Display key metrics with formatting.</li> <li><code>&lt;line-chart&gt;</code>, <code>&lt;bar-chart&gt;</code>, <code>&lt;pie-chart&gt;</code>, <code>&lt;doughnut-chart&gt;</code>: Various ECharts visualizations with options for stacking, grouping, orientation, and breakdowns.</li> <li><code>&lt;table-chart&gt;</code>, <code>&lt;table-description-chart&gt;</code>, <code>&lt;tables-list-chart&gt;</code>: Display raw data, table schemas, or available tables.</li> <li><code>&lt;bar-chart-grid&gt;</code>: Automatically generate a grid of bar charts for multiple dimensions.</li> </ul> </li> <li>Static Data Sources: Load data directly from static files (like <code>.parquet</code>) hosted alongside your site or from external URLs.</li> <li>Static Site Generator Friendly: Designed to integrate seamlessly with static site generators like MkDocs, Jekyll, Hugo, etc.</li> </ul>"},{"location":"#how-it-works","title":"How it Works","text":"Static BI under the hood <ol> <li>Data Management: The <code>&lt;source-table&gt;</code> components initializes DuckDB-WASM and instruct it to load data (e.g., fetch a Parquet file) within the in-browser database.</li> <li>Component Initialization: Custom elements like <code>&lt;bar-chart&gt;</code>, <code>&lt;score-card&gt;</code>, etc., are defined in JavaScript modules and used directly in the HTML/Markdown content.</li> <li>Data Querying: When the page loads or filters change, each component constructs a SQL query based on its attributes (e.g., <code>table</code>, <code>measure</code>, <code>by</code>, <code>breakdown_by</code>) and the current global filters. It sends this query to <code>DuckDB</code>.</li> <li>Rendering: The component receives query results from DuckDB and renders the visualization using ECharts or by generating appropriate HTML (for tables/scorecards).</li> <li>Interactivity: Click events on chart elements trigger a filter update. The <code>base_chart.js</code> logic updates the global filter state and dispatches an event, causing relevant components to re-query data and re-render.</li> </ol>"},{"location":"#inspiration","title":"Inspiration","text":"<ul> <li>Evidence</li> <li>Rill Data</li> <li>Mosaic</li> <li>Lightdash</li> </ul>"},{"location":"#contribute","title":"Contribute!","text":"<p>Static BI is fully open-source (MIT License). Any contribution is more than welcome \ud83e\udd17!</p> <ul> <li>Add a \u2b50 on the repo to show your support</li> <li>Join our Slack and talk with us</li> <li>Raise an issue</li> <li>Open a Pull-Request!</li> </ul> Todo Ideas <ul> <li>Add Documentation</li> <li>Add controls such as date-range or dimension selection.</li> <li>Create a playground to edit dashboard code online and see result in realtime</li> <li>Add connectors to:<ul> <li>cubejs</li> <li>supabase</li> <li>Postgrest: <code>docker run --rm -p 3000:3000 -e PGRST_DB_URI=\"postgres://cube:12345@demo-db.cube.dev/ecom\" -e PGRST_DB_ANON_ROLE=cube -e PGRST_DB_AGGREGATES_ENABLED=true postgrest/postgrest</code></li> <li>buckets</li> <li>data-warehouses...</li> <li>unytics</li> </ul> </li> <li>Add layout components?<ul> <li>tabs</li> <li>grid / columns</li> </ul> </li> </ul>"},{"location":"docs/bi_components/","title":"BI Components","text":"<p> Submit</p>"},{"location":"docs/bi_components/#source-table","title":"Source Table","text":"UICode <p>Source Table component is invisible on the page. The file is downloaded in the background and loaded into a DuckDB table.  </p> <pre><code>&lt;source-table\n  name=\"stocks\"\n  file=\"https://idl.uw.edu/mosaic/data/stocks.parquet\"\n  columns=\"*, Symbol as company, Close as stock_value, date_trunc('month', Date) as month, strftime(date, '%Y') as year\"&gt;\n&lt;/source-table&gt;\n</code></pre>"},{"location":"docs/bi_components/#score-card","title":"Score Card","text":"UICode <pre><code>&lt;score-card\n  title=\"Nb companies\"\n  table=\"stocks\"\n  value=\"count(distinct company)\"&gt;\n&lt;/score-card&gt;\n</code></pre>"},{"location":"docs/bi_components/#bar-chart","title":"Bar Chart","text":""},{"location":"docs/bi_components/#simple-bar-chart","title":"Simple Bar Chart","text":"UICode <pre><code>&lt;bar-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"company\"\n  limit=\"10\"\n  order_by=\"max(stock_value) desc\"&gt;\n&lt;/bar-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#horizontal-bar-chart","title":"Horizontal Bar Chart","text":"UICode <pre><code>&lt;bar-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"company\"\n  limit=\"10\"\n  order_by=\"max(stock_value) desc\"\n  horizontal&gt;\n&lt;/bar-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#multi-bar-chart","title":"Multi Bar Chart","text":"UICode <pre><code>&lt;bar-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"year\"\n  breakdown_by=\"company\"\n  limit=\"10\"&gt;\n&lt;/bar-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#multi-horizontal-bar-chart","title":"Multi Horizontal Bar Chart","text":"UICode <pre><code>&lt;bar-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"year\"\n  breakdown_by=\"company\"\n  limit=\"10\"\n  horizontal&gt;\n&lt;/bar-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#stacked-bar-chart","title":"Stacked Bar Chart","text":"UICode <pre><code>&lt;bar-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"year\"\n  breakdown_by=\"company\"\n  limit=\"10\"\n  stacked&gt;\n&lt;/bar-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#stacked-horizontal-bar-chart","title":"Stacked Horizontal Bar Chart","text":"UICode <pre><code>&lt;bar-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"year\"\n  breakdown_by=\"company\"\n  limit=\"10\"\n  stacked\n  horizontal&gt;\n&lt;/bar-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#line-chart","title":"Line Chart","text":""},{"location":"docs/bi_components/#simple-line-chart","title":"Simple Line Chart","text":"UICode <pre><code>&lt;line-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"company\"\n  limit=\"10\"\n  order_by=\"max(stock_value) desc\"&gt;\n&lt;/line-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#multi-line-chart","title":"Multi Line Chart","text":"UICode <pre><code>&lt;line-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"year\"\n  breakdown_by=\"company\"\n  limit=\"10\"&gt;\n&lt;/line-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#stacked-line-chart","title":"Stacked Line Chart","text":"UICode <pre><code>&lt;line-chart\n  table=\"stocks\"\n  measure=\"max(stock_value)\"\n  by=\"year\"\n  breakdown_by=\"company\"\n  limit=\"10\"\n  stacked&gt;\n&lt;/line-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#table-chart","title":"Table Chart","text":""},{"location":"docs/bi_components/#tables-list","title":"Tables List","text":"UICode <pre><code>&lt;tables-list-chart&gt;&lt;/tables-list-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#table-schema","title":"Table Schema","text":"UICode <pre><code>&lt;table-description-chart table=\"stocks\"&gt;&lt;/table-description-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#table-chart_1","title":"Table Chart","text":"UICode <pre><code>&lt;table-chart\n  table=\"stocks\"\n  measures=\"sum(volume), sum(close)\"\n  by=\"date, company\"\n  limit=\"10\"\n  order_by=\"date desc\"&gt;\n&lt;/table-chart&gt;\n</code></pre>"},{"location":"docs/bi_components/#controls","title":"Controls","text":""},{"location":"docs/bi_components/#date-range","title":"Date Range","text":"UICode <pre><code>&lt;date-range-picker&gt;&lt;/date-range-picker&gt;\n</code></pre>"},{"location":"docs/one/","title":"Welcome to Static BI!","text":""},{"location":"docs/one/#examples","title":"Examples","text":"<p>Date Range: </p>"},{"location":"docs/one/#hey","title":"hey","text":""},{"location":"docs/one/#score-cards","title":"Score Cards","text":""},{"location":"docs/one/#dashboard","title":"Dashboard","text":""},{"location":"docs/one/#stacked-bar-chart","title":"Stacked Bar Chart","text":""},{"location":"docs/one/#grouped-bar-chart","title":"Grouped Bar Chart","text":""},{"location":"docs/one/#multiline-chart","title":"MultiLine Chart","text":""},{"location":"docs/one/#tables-list","title":"Tables List","text":""},{"location":"docs/one/#table-description-chart","title":"Table Description Chart","text":""},{"location":"docs/one/#table-chart","title":"Table Chart","text":""},{"location":"docs/one/#line-chart-count","title":"Line Chart (COUNT)","text":""},{"location":"docs/one/#line-chart","title":"Line Chart","text":""},{"location":"docs/one/#bar-chart","title":"Bar Chart","text":""},{"location":"docs/one/#bar-chart-grid","title":"Bar Chart Grid","text":""},{"location":"docs/one/#rides-table-description-chart","title":"Rides Table Description Chart","text":""},{"location":"docs/one/#rides-bar-chart-grid","title":"Rides Bar Chart Grid","text":""},{"location":"docs/stats/","title":"Stats","text":""},{"location":"docs/stats/#hey","title":"hey","text":""},{"location":"docs/stats/#table-description-chart","title":"Table Description Chart","text":""},{"location":"docs/core_concepts/bi_components/","title":"Bi components","text":"<p>TO WRITE</p>"},{"location":"docs/core_concepts/cross_filtering/","title":"Cross filtering","text":"<p>TO WRITE</p>"},{"location":"docs/core_concepts/data_sources/","title":"Data sources","text":"<p>TO WRITE</p>"},{"location":"docs/core_concepts/motivation/","title":"Motivation","text":"<p>To Write</p>"},{"location":"docs/data_sources/","title":"Hello","text":""},{"location":"examples/","title":"All Examples","text":""},{"location":"examples/acquisition/","title":"Acquisition","text":""},{"location":"examples/acquisition/#fr-acquisition-dashboard","title":"FR Acquisition Dashboard","text":""},{"location":"examples/conference_hall/","title":"Conference hall","text":""},{"location":"examples/conference_hall/#proposals-analysis","title":"Proposals Analysis","text":"<p>     select         conference_name,         proposal.id,         coalesce(proposal.level, 'NA') as level,         proposal.deliberationStatus as deliberation_status,         proposal.deliberationStatus as status,         proposal.confirmationStatus as confirmation_status,         proposal.publicationStatus as publication_status,         coalesce(unnest(proposal.categories), 'NA') as category,         unnest(proposal.tags)::VARCHAR as tag,         split_part(coalesce(unnest(proposal.formats), 'NA'), ' \u2014 (', 1) as format,         coalesce(unnest(proposal.languages), 'NA') as language,         unnest(proposal.speakers).name as speaker_id,         coalesce(unnest(proposal.speakers).company, 'NA') as speaker_company,         coalesce(unnest(proposal.speakers).location, 'NA') as speaker_location,         proposal.review.average as review_average,     from _proposals </p> <ul> <li> <p> </p> </li> <li> <p> </p> </li> <li> <p> </p> </li> </ul> <p> </p>"},{"location":"examples/finops/","title":"Finops","text":""},{"location":"examples/finops/#bigquery-finops","title":"BigQuery Finops","text":"<p>More style here</p>"}]}